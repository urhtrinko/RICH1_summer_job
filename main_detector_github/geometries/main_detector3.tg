// default unit of length is mm
:volu WORLD BOX 50000*mm 50000*m 50000*m G4_Galactic
:vis WORLD OFF

//rotational matrix <name> <rotation around x,y,z>
:rotm r000 0 0 0
:rotm rX00_3a 25 0.0 0.0 // written in DEGREES
:rotm rX00_3b -25 0.0 0.0 //written in DEGREES
:rotm rXYZ 0 0 0 // 
:rotm r0YZ 0 -1.5707963267948966*rad -0.15119109897972616*rad 
:rotm rX00_5 -5.0 90.0 0.0 // written in DEGREES, DON'T CHANGE last two parameters
:rotm rX00_5a -5 0.0 0.0 // written in DEGREES
:rotm rX00_5b 5 0.0 0.0  // written in DEGREES
:rotm rX00_9 -75 0.0 0.0 // written in DEGREES
:rotm rX00_10 75 0.0 0.0 // written in DEGREES

//Defining materials
:MIXT_BY_NATOMS C4F10 11.2*kg/m3 2 C 4 F 10
:MIXT_BY_VOLUME M_aerogel 0.1 4 G4_O 0.48 G4_H 0.01 G4_Si 0.45 G4_C 0.06


////////////////////////////////////////////////////////////////////////////////////////////////////
// ---- Components of the detector ---- //

// Detector hall
:volu DetectorHall BOX 20000.0 20000.0 20000.0 G4_Galactic //G4_AIR 
:color DetectorHall 0 0 0
:place DetectorHall 1 WORLD r000 0 0 0
:vis DetectorHall OFF

// Container vessel box
:volu RichTbContainerVesselBox BOX 0.5*2000.0 0.5*4000.0 0.5*1200.0 G4_Galactic //C4F10, for now vacuum
:color RichTbContainerVesselBox 0.39 1.39 2.07                                  //       so that the
:place RichTbContainerVesselBox 2 DetectorHall r000 0 0 0                       //       only Cherenkov
                                                                                //       radiator is the
// Segmented spherical mirror (Mirror1)                                         //       aerogel.
// Sphere (lower)
// Parameters of the Sphere (for 5o)
// x0 = 0, y0 = -207.16*mm, z0 = -802.48*mm
// r = 1220.2
// refer to SegSphMirr_pos.py to CHANGE the position or angle
:solid Solid_MirrSphSeg1 SPHERE 1219.2 1221.2 0.0*rad 6.283185307179586*rad 0.0*rad 0.08333333333333333*rad
:volu MirrSphSeg1 Solid_MirrSphSeg1 G4_Al
:color MirrSphSeg1 2.36 0.83 0.14
:place MirrSphSeg1 3 RichTbContainerVesselBox rX00_3a 0 -605.9390588806739 -959.1156201863909 // written in MILLIMETERS
// Sphere (upper)
:solid Solid_MirrSphSeg2 SPHERE 1219.2 1221.2 0.0*rad 6.283185307179586*rad 0.0*rad 0.08333333333333333*rad
:volu MirrSphSeg2 Solid_MirrSphSeg2 G4_Al
:color MirrSphSeg2 2.36 0.83 0.14
:place MirrSphSeg2 4 RichTbContainerVesselBox rX00_3b 0 608.0491190202109 -959.1156201863909 // written in MILLIMETERS


// Spherical mirror (Mirror2)
//Sphere 
//:solid RichTbR1SphFullSph SPHERE 3650.0 3651.5 -0.10699101038785304*rad 0.21398202077570608*rad 1.3224520211537645*rad 0.4966886112822641*rad
// Box
//:solid RichTbR1SphSubBox BOX 5000 5000 5000
// 4 subtractions
//:solid RichTbR1TSph subtraction RichTbR1SphFullSph RichTbR1SphSubBox rXYZ 0.0 5325.0 0.0
//:solid RichTbR1BSph subtraction RichTbR1TSph RichTbR1SphSubBox rXYZ 0.0 -5325.0 0.0
//:solid RichTbR1LSph subtraction RichTbR1BSph RichTbR1SphSubBox rXYZ 0.0 0.0 -5750.0
//:solid RichTbR1RSph subtraction RichTbR1LSph RichTbR1SphSubBox rXYZ 0.0 0.0 5750.0
// final creation and placement
//:volu SphereMirror RichTbR1RSph G4_Al
//:color SphereMirror 0.0 0.0 0.0
//:place SphereMirror 4 DetectorHall r0YZ 0.0 932.897 -3118.286

// Flat mirror (Mirror3)
// Parameters of Sphere - PROBLEM: the beam is seamingly reflecting before reaching the mirror surface
// x0 = 0, y0 = -63.95, z0 = -5183.96
// r = 5003.0*mm
//:volu FlatMirror SPHERE 5000.0 5006.0 -0.08846076673315217*rad 0.17692153346630435*rad 1.420545195052557*rad 0.3005022634846794*rad G4_SILICON_DIOXIDE
//:place FlatMirror 5 RichTbContainerVesselBox rX00_5 0 -213.9598190334662 -5183.962074553003 // written in MILLIMETERS, 600 -5100
// Replacement of the flat mirror with a box
// Box (lower)
:volu FlatMirror1 BOX 500 500 6 G4_Al
:place FlatMirror1 5 RichTbContainerVesselBox rX00_5a 0 -650 -200 // scale parameters are in MILLIMETERS
// Box (upper)
:volu FlatMirror2 BOX 500 500 6 G4_Al
:place FlatMirror2 6 RichTbContainerVesselBox rX00_5b 0 650 -200 // scale parameters are in MILLIMETERS

// Quartz radiator (Aerogel)
// define solids
:solid RichTbQuartzSphA SPHERE 0.0 412.09 0.0*rad 6.283185307179586*rad 0.0*rad 3.141592653589793*rad 
:solid RichTbQuartzSphB SPHERE 0.0 412.09 0.0*rad 6.283185307179586*rad 0.0*rad 3.141592653589793*rad 
// intersection of two spheres
:solid SphInt intersection RichTbQuartzSphA RichTbQuartzSphB r000 0.0 0.0 816.18
// placement of the created solid
:volu QuartzRadiator SphInt M_aerogel
:color QuartzRadiator 2.55 2.41 0.55
:place QuartzRadiator 7 RichTbContainerVesselBox r000 0.0 0.0 -650 // original-795.3899999999999

// Vacuum tube
:volu VacTub TUBE 0 20 10000 G4_Galactic
:place VacTub 8 DetectorHall r000 0 0 -10000-600
:vis VacTub OFF



// Place PMT window, 1mm thick, it covers +- 84 mm, pitch 30mm, 18mm one pmt
// Box (lower)
:volu pmt1 BOX 400*mm 400*mm 0.5*mm G4_SILICON_DIOXIDE
:color pmt1 0.9 0.9 0.   
// <<<<<<<<<<<<<< ------------- PMT POSITION ----------------- >>>>>>>>>>>>
:PLACE pmt1 9 RichTbContainerVesselBox rX00_9 0 -1600 200 // add 0.5mm shift due to window thickness
// Box (upper)
:volu pmt2 BOX 400*mm 400*mm 0.5*mm G4_SILICON_DIOXIDE
:color pmt2 0.9 0.9 0.   
// <<<<<<<<<<<<<< ------------- PMT POSITION ----------------- >>>>>>>>>>>>
:PLACE pmt2 10 RichTbContainerVesselBox rX00_10 0 1600 200 // add 0.5mm shift due to window thickness

// Plane for analysis (a plane that lays 50 mm in front of the pmt detector and therefore helps with
// the angular analysis of the beams that fall on the plane)
// Box (lower)
//:volu plane1 BOX 400*mm 400*mm 0.5*mm G4_Galactic
//:color plane1 0 0 0   
//:PLACE plane1 11 RichTbContainerVesselBox rX00_9 0 -1600+35.36 200-35.36 //
// Box (upper)
//:volu plane2 BOX 400*mm 400*mm 0.5*mm G4_Galactic
//:color plane2 0 0 0   
//:PLACE plane2 12 RichTbContainerVesselBox rX00_10 0 1600-35.36 200-35.36 //
// visability of the planes
//:vis plane1 OFF
//:vis plane2 OFF

////////////////////////////////////////////////////////////////////////////////////////////////////
// ----- OPTICAL PROPERTIES ----- //

// optical properties of Air
#include geometries/materials/getG4Air.tg

// optical properties of Aerogel
#include geometries/materials/M_AEROGEL_1.03_rayleigh.tg

// optical properties of PMT window
#include geometries/materials/G4_SILICON_DIOXIDE.tg // To have entries on PMT this must be uncommented

// optical properties of C4F10
#include geometries/materials/getC4F10.tg

// optical properties of vacuum
#include geometries/materials/getVacuum.tg

////////////////////////////////////////////////////////////////////////////////////////////////////
// ----- Optical properties of surfaces ----- //

// SURFACE PROPERTIES, used for reflection on the mirror
#include  geometries/materials/SURFACE_mirrors.tg

// Surface properties of PMT
//#include geometries/materials/pmtWindowSurface.tg

// Optical properties of the surface between Air an C4F10
//#include geometries/materials/surfaceAir2C4F10.tg

// Optical properties of the surface between C4F10 and aerogel
//#include geometries/materials/surfaceC4F102Aerogel.tg

// Surface properties between vacuum_air
//#include vacuum_air.tg